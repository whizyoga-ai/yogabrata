name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  checkout-and-cache:
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.check_frontend.outputs.changed }}
      backend_changed: ${{ steps.check_backend.outputs.changed }}
      infrastructure_changed: ${{ steps.check_infra.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check frontend changes
        id: check_frontend
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^frontend/' > /dev/null; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check backend changes
        id: check_backend
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^backend/' > /dev/null; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check infrastructure changes
        id: check_infra
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '^(infrastructure/|nginx.conf|docker-compose.yml)' > /dev/null; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Cache frontend node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: frontend-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            frontend-node-modules-

      - name: Cache backend pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: backend-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            backend-pip-

  frontend-build:
    needs: checkout-and-cache
    if: needs.checkout-and-cache.outputs.frontend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build frontend Docker image
        run: |
          docker build -t yogabrata-frontend:latest -f frontend/Dockerfile frontend

  backend-build:
    needs: checkout-and-cache
    if: needs.checkout-and-cache.outputs.backend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build backend Docker image
        run: |
          docker build -t yogabrata-backend:latest -f backend/Dockerfile backend

  infrastructure-build:
    needs: checkout-and-cache
    if: needs.checkout-and-cache.outputs.infrastructure_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build infrastructure components
        run: |
          echo "Infrastructure build steps here"

  frontend-deploy:
    needs: frontend-build
    if: needs.checkout-and-cache.outputs.frontend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy frontend service
        run: |
          echo "Deploy frontend service here"

  backend-deploy:
    needs: backend-build
    if: needs.checkout-and-cache.outputs.backend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy backend service
        run: |
          echo "Deploy backend service here"

  backup-micropipeline:
    needs: [frontend-deploy, backend-deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Backup database and data
        run: |
          echo "Backup steps here"

  health-check-micropipeline:
    needs: backup-micropipeline
    runs-on: ubuntu-latest
    steps:
      - name: Run health checks
        run: |
          echo "Health check steps here"

  infrastructure-deploy:
    needs: infrastructure-build
    if: needs.checkout-and-cache.outputs.infrastructure_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy infrastructure
        run: |
          echo "Deploy infrastructure here"
