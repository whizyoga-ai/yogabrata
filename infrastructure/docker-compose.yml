services:
  # Frontend service
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - yogabrata-network

  # Backend service
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-production}
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/yogabrata
    volumes:
      - ../backend:/app
    depends_on:
      - db
    networks:
      - yogabrata-network

  # Database service
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=yogabrata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - yogabrata-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - yogabrata-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - yogabrata-network

volumes:
  postgres_data:
  redis_data:

networks:
  yogabrata-network:
    driver: bridge
